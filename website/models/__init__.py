#!/usr/bin/env python3
from typing import Any

from sqlalchemy import create_engine, text

from .bundle import Bundle
from .comment import Comment
from .sighting import Sighting
from .user import User


__all__ = ["User", "Bundle", "Comment", "Sighting"]


def get_db_info() -> dict[str, Any]:
    return {
        "users": User.query.count(),
        "bundles": Bundle.query.count(),
        "comments": Comment.query.count(),
        "sightings": Sighting.query.count(),
    }


def db_init(db) -> None:  # type: ignore[no-untyped-def]
    "Will create the database from conf parameters."
    db.create_all()


def db_create(db, db_config_dict, database_name: str) -> None:  # type: ignore[no-untyped-def]
    db_conn_format = "postgresql://{user}:{password}@{host}:{port}/{database}"
    db_conn_uri_default = db_conn_format.format(database="postgres", **db_config_dict)
    engine_default = create_engine(db_conn_uri_default)
    conn = engine_default.connect()
    conn.execute(text("COMMIT"))
    conn.execute(text("CREATE DATABASE %s" % database_name))
    conn.close()

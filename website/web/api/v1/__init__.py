from typing import Any

from importlib.metadata import version
from flask import Blueprint
from flask import render_template
from flask_restx import Api  # type: ignore[import-untyped]

from vulnerabilitylookup.default import get_config
from website.web.bootstrap import application
from website.web.bootstrap import csrf


apiv1_blueprint = Blueprint(
    "apiv1", __name__, url_prefix=""
)  # should we put the version in the URL ?
csrf.exempt(apiv1_blueprint)


def setup_api(application: Any) -> Api:
    authorizations = {
        "apikey": {
            "type": "apiKey",
            "in": "header",
            "name": "X-API-KEY",
        }
    }

    api = Api(
        apiv1_blueprint,
        title="Vulnerability-Lookup API",
        version=version("vulnerabilitylookup"),
        description="<a href='https://www.circl.lu' rel='noreferrer' target='_blank'>"
        "<img src='https://vulnerability.circl.lu/static/img/VL-hori-coul.png' width='500px' /></a><br />"
        "API to query <a href='https://github.com/cve-search/vulnerability-lookup' rel='noreferrer' target='_blank'>Vulnerability Lookup</a>"
        "<br /><br />Back to the <a href='/'>main page</a>"
        "<br /><br /><a href='https://vulnerability.circl.lu/documentation' target='_blank'>Official documentation</a>",
        license="GNU Affero General Public License version 3",
        license_url="https://www.gnu.org/licenses/agpl-3.0.html",
        doc="/doc",
        security="apikey",
        authorizations=authorizations,
        contact_email=application.config.get("ADMIN_EMAIL", "info@circl.lu"),
        contact_url=application.config.get("ADMIN_WEBSITE", "https://www.circl.lu"),
    )

    @api.documentation  # type: ignore[misc]
    def custom_ui() -> str:
        http_schema = "http" if application.debug else "https"
        return render_template(
            "swagger-ui.html",
            title=api.title,
            specs_url="{}://{}/swagger.json".format(
                http_schema, get_config("generic", "public_domain")
            ),
        )

    from website.web.api.v1 import system
    from website.web.api.v1 import vulnerability
    from website.web.api.v1 import comment
    from website.web.api.v1 import user
    from website.web.api.v1 import bundle
    from website.web.api.v1 import epss
    from website.web.api.v1 import sighting
    from website.web.api.v1 import stats

    api.add_namespace(system.system_ns, path="/api")
    api.add_namespace(vulnerability.vulnerability_ns, path="/api")
    api.add_namespace(stats.stats_ns, path="/api")
    if get_config("generic", "user_accounts"):
        api.add_namespace(comment.comment_ns, path="/api")
        api.add_namespace(user.user_ns, path="/api")
        api.add_namespace(bundle.bundle_ns, path="/api")
        api.add_namespace(sighting.sighting_ns, path="/api")
    api.add_namespace(epss.epss_ns, path="/api")

    return api


api = setup_api(application)

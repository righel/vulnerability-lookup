// Function to prepare data for Chart.js
function prepareChartData(sightings) {
  const dataPerDay = {};

  // Aggregate data per day and by type
  sightings.forEach(sighting => {
      const date = new Date(sighting.creation_timestamp).toISOString().split('T')[0]; // Extract date (YYYY-MM-DD)
      const type = sighting.type;

      if (!dataPerDay[date]) {
          dataPerDay[date] = {
              "seen": 0,
              "confirmed": 0,
              "exploited": 0,
              "patched": 0,
              "not-confirmed": 0,
              "not-exploited": 0,
              "not-patched": 0
          };
      }

      if (dataPerDay[date][type] !== undefined) {
          dataPerDay[date][type] += 1; // Increment the count of the specific sighting type for that day
      }
  });

  return dataPerDay;
}

// Function to draw the Chart using Chart.js
function drawBarChart(sightings) {
const dataPerDay = prepareChartData(sightings);
let labels = Object.keys(dataPerDay); // Dates (X-axis)

// Sort the labels (dates) in chronological order (oldest to newest)
labels = labels.sort((a, b) => new Date(a) - new Date(b));

const types = ["seen", "confirmed", "exploited", "patched", "not-confirmed", "not-exploited", "not-patched"];

// Data for each type
const datasets = types.map((type, index) => {
    const colors = ["#4CAF50", "#2196F3", "#FFC107", "#8BC34A", "#F44336", "#FF5722", "#9C27B0"];
    const isBelowAxis = type.startsWith('not-');

    return {
        label: type,
        backgroundColor: colors[index],
        // Use negative values for 'not-*' types to place them below the X-axis
        data: labels.map(date => isBelowAxis ? -dataPerDay[date][type] : dataPerDay[date][type]),
        barThickness: 20 // Control bar width
    };
});

const ctx = document.getElementById('sightingsChart').getContext('2d');
new Chart(ctx, {
    type: 'bar',
    data: {
        labels: labels, // X-axis: Sorted Dates
        datasets: datasets // Y-axis: Data per type
    },
    options: {
        maintainAspectRatio: false, // Allow the chart to grow in width
        scales: {
            x: {
                stacked: false, // Disable stacking on the X-axis
                beginAtZero: true,
                min: 0, // Set minimum range on x-axis to include all data
                max: labels.length - 1 // Limit the max to the total number of labels
            },
            y: {
                stacked: false, // Disable stacking on the Y-axis
                beginAtZero: true, // Center 0 on Y-axis
                ticks: {
                    stepSize: 1, // Set step size to 1 to ensure integers only
                    callback: function(value) {
                        return Math.round(Math.abs(value)); // Display all y-axis values as positive numbers
                    }
                }
            }
        },
        plugins: {
            legend: {
                display: true,
                position: 'top',
                title: {
                  text: 'Type of sightings',
                  display: true
                }
            },
            tooltip: {
                callbacks: {
                    // Show positive numbers in tooltips even for 'not-*' bars below the X-axis
                    label: function(tooltipItem) {
                        return `${tooltipItem.dataset.label}: ${Math.abs(tooltipItem.raw)}`;
                    }
                }
            }
        }
    }
});
}

#!/usr/bin/env python3

from __future__ import annotations

import logging
import logging.config

from vulnerabilitylookup.default import AbstractManager, get_config
from vulnerabilitylookup.feeders.csaf_ncscnl import CSAFNcscNl

logging.config.dictConfig(get_config('logging'))


class CSAFNcscNlImporter(AbstractManager):

    def __init__(self, loglevel: int | None=None) -> None:
        super().__init__(loglevel)
        self.script_name = 'csaf_ncscnl_importer'
        self.csaf = CSAFNcscNl()

    def _to_run_forever(self) -> None:
        self.csaf.update(self.shutdown_requested)


def main() -> None:
    c = CSAFNcscNlImporter()
    c.run(sleep_in_sec=3600)


if __name__ == '__main__':
    main()
